<#@ template language="C#" hostspecific="true" debug="True" #>
<#@ assembly name="$(SolutionDir)(External Libraries)\emFrameworkCore.CodeGen.dll" #> 
<#@ assembly name="Microsoft.SqlServer.Smo" #>
<#@ assembly name="Microsoft.SqlServer.ConnectionInfo" #>
<#@ assembly name="Microsoft.SqlServer.Management.Sdk.Sfc" #>
<#@ assembly name="System.ComponentModel.DataAnnotations" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System" #>
<#@ import namespace="emFrameworkCore.CodeGen" #>
<#@ import namespace="Microsoft.SqlServer.Management.Smo" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Text" #>
<#@ output extension=".txt" #>
<#
  emT4.EnvironmentInformation xEnvironmentInformation = new emT4.EnvironmentInformation()
  {
    TemplateHost = Host as IServiceProvider,
    GenerationEnvironment = GenerationEnvironment,
    Directory = Path.GetDirectoryName(Host.TemplateFile),
    CodeGenFilename = "(CodeGen.WebAPI).xml",
    TemplateFilename = Path.GetFileName(Host.TemplateFile)
  };

  emT4.Initialize(xEnvironmentInformation);
  foreach (emT4.Entity EntityItem in emT4.EntityItems())
  {
    emT4.LogWrite(emT4.OutputFilename(EntityItem));
    string sWebResource = emT4.MetadataDictionary_AttributeProperty(EntityItem.Name + "WebEntityDesign", "WebResource", "Name").FirstOrDefault().Value.Value;
#>
//********************************************************************
//*                                                                  *
//* Copyright (c) 2016-<#=DateTime.Now.Year#> ExcelliMatrix, Inc. All Rights Reserved. *
//*                                                                  *
//*    This code was generated from an emFrameworkCode Template.     *
//*                                                                  *
//*                     DO NOT MODIFY THIS FILE.                     *
//*                     -----------------------                      *
//*                                                                  *
//********************************************************************

// Directory:        <#=xEnvironmentInformation.Directory.Replace(xEnvironmentInformation.GetSolutionDirectory(), "{{SolutionDir}}")#>
// CodeGenFilename:  <#=xEnvironmentInformation.CodeGenFilename#>
// TemplateFilename: <#=Path.GetFileName(xEnvironmentInformation.TemplateFilename)#>

<#=emT4.UsingBlock()#>

namespace <#=emT4.GetDictionaryEntry("ClassNamespace")#>
{
   public partial class <#=EntityItem.Name#>WebEntity
   {
    //---------------------------------------------------------------------------------------------
<# if (EntityItem.IncludeMethod("WebAPI_Create")) { 
#>    //---------------------------------------------------------------------------------------------

    public HttpResponseMessage WebAPI_Create(Uri a_xURI)
    {
      HttpResponseMessage xReturnValue = null;

      HttpClient xHttpClient = new HttpClient();
      List<KeyValuePair<string, string>> xKeyValuePairs = Export_ToKeyValuePairs();
      FormUrlEncodedContent formUrlEncodedContent = new FormUrlEncodedContent(xKeyValuePairs);
      xReturnValue = xHttpClient.PostAsync(a_xURI, formUrlEncodedContent).Result;

      return xReturnValue;
    }

    //---------------------------------------------------------------------------------------------
<# } #>
<# if (EntityItem.IncludeMethod("WebAPI_Delete")) { 
#>    //---------------------------------------------------------------------------------------------

    public HttpResponseMessage WebAPI_Delete(Uri a_xURI)
    {
      HttpResponseMessage xReturnValue = WebAPI_Delete(a_xURI, <#=EntityItem.Name#>GUID);

      return xReturnValue;
    }

    //---------------------------------------------------------------------------------------------
    //---------------------------------------------------------------------------------------------

    public HttpResponseMessage WebAPI_Delete(Uri a_xURI, GUID a_xGUID)
    {
      HttpResponseMessage xReturnValue = null;

      HttpClient xHttpClient = new HttpClient();
      string sURL = $"{a_xURI}/{a_xGUID}";
      xReturnValue = xHttpClient.DeleteAsync(sURL).Result;

      return xReturnValue;
    }

    //---------------------------------------------------------------------------------------------
<# } #>
<# if (EntityItem.IncludeMethod("WebAPI_Load")) { 
#>    //---------------------------------------------------------------------------------------------

    public HttpResponseMessage WebAPI_Load(Uri a_xURI, DataRequest a_xDataRequest)
    {
      HttpResponseMessage xReturnValue = null;

      HttpClient xHTTPClient = new HttpClient();
      Uri xURI = new Uri(a_xURI, "/api/<#=EntityItem.Name#>");
      xReturnValue = xHTTPClient.GetAsync(xURI).Result;

      return xReturnValue;
    }

    //---------------------------------------------------------------------------------------------
<# } #>
<# if (EntityItem.IncludeMethod("WebAPI_Read")) {
#>    //---------------------------------------------------------------------------------------------

    public HttpResponseMessage WebAPI_Read(Uri a_xURI)
    {
      HttpResponseMessage xReturnValue = WebAPI_Read(a_xURI, <#=EntityItem.Name#>GUID);

      return xReturnValue;
    }

    //---------------------------------------------------------------------------------------------
    //---------------------------------------------------------------------------------------------

    public HttpResponseMessage WebAPI_Read(Uri a_xURI, GUID a_xGUID)
    {
      HttpResponseMessage xReturnValue = null;

      HttpClient xHttpClient = new HttpClient();
      string sURL = $"{a_xURI}/{a_xGUID}";
      xReturnValue = xHttpClient.DeleteAsync(sURL).Result;

      return xReturnValue;
    }

    //---------------------------------------------------------------------------------------------
<# } #>
<# if (EntityItem.IncludeMethod("WebAPI_Update")) { 
#>    //---------------------------------------------------------------------------------------------

    public HttpResponseMessage WebAPI_Update(Uri a_xURI)
    {
      HttpResponseMessage xReturnValue = null;

      HttpClient xHttpClient = new HttpClient();
      List<KeyValuePair<string, string>> xKeyValuePairs = Export_ToKeyValuePairs();
      FormUrlEncodedContent formUrlEncodedContent = new FormUrlEncodedContent(xKeyValuePairs);
      xReturnValue = xHttpClient.PutAsync(a_xURI, formUrlEncodedContent).Result;

      return xReturnValue;
    }

    //---------------------------------------------------------------------------------------------
<# } #>
    //---------------------------------------------------------------------------------------------
    //---------------------------------------------------------------------------------------------
    //-----
    //----- Metadata available for "<#=emT4.FormatEntity(EntityItem.DesignTierName)#>"
    //-----
<#
  foreach (string sKey in emT4.MetadataDictionary(EntityItem.DesignTierName).Keys)
  {
    if (emT4.MetadataDictionary()[sKey].EntryType == emT4.EntryTypes.TypeProperty)
    {
#>
    //----- <#=emT4.MetadataDictionary()[sKey].PropertyName.PadRight(40)#> Key = "<#=sKey#>"
<#
    }
  }
#>
    //-----
    //-----
<#
  foreach (string sKey in emT4.MetadataDictionary(EntityItem.DesignTierName).Keys)
  {
#>
    //----- <#=("(" + emT4.MetadataDictionary()[sKey].EntryType + ")").PadRight(40)#> <#=sKey#> == "<#=emT4.MetadataDictionary()[sKey].Value??"null"#>"
<#
  }
#>
    //-----
    //---------------------------------------------------------------------------------------------
    //---------------------------------------------------------------------------------------------
  }
}

//**************************************************************************************
//*                                                                                    *
//* This code was generated from an emFrameworkCore Template. DO NOT MODIFY THIS FILE. *
//*                                                           -----------------------  *
//**************************************************************************************
<#
    emT4.SaveOutput(EntityItem);
  }
#>
